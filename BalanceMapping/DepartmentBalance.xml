<?xml version="1.0" encoding="utf-8" ?>

<sqlMap namespace="DepartmentBalance" xmlns="http://ibatis.apache.org/mapping"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >

  <alias>
    <typeAlias alias="DepartmentBalance" type="BalanceModel.DepartmentBalance,BalanceModel" />
  </alias>
  <resultMaps>
    <resultMap id="DepartmentBalanceMap" class="DepartmentBalance">
      <result property="RowNumber" column="RowNumber"/>
      <result property="ID" column="ID"/>
      <result property="DepartmentID" column="DepartmentID"/>
      <result property="DepartmentName" column="DepartmentName"/>
      <result property="RegularMoney" column="RegularMoney"/>
      <result property="UnRegularMoney" column="UnRegularMoney"/>
      <result property="AmountMoney" column="AmountMoney"/>
      <result property="RegularMoneyVary" column="RegularMoneyVary"/>
      <result property="UnRegularMoneyVary" column="UnRegularMoneyVary"/>
      <result property="AmountMoneyVary" column="AmountMoneyVary"/>
      <result property="Rate" column="Rate"/>
      <result property="BalanceTime" column="BalanceTime"/>
    </resultMap>
  </resultMaps>
  <statements>
    <select id="SelectDepartmentBalanceCount"  resultClass="int"   parameterClass="DepartmentBalance">
      select count(*) from DepartmentBalanceVary where 1=1
      <dynamic>
        <isParameterPresent>
          <isNotEmpty prepend="and" property="ID">ID=#ID#</isNotEmpty>
          <isNotEmpty prepend="and" property="DepartmentID">DepartmentID=#DepartmentID#</isNotEmpty>
          <isNotEmpty prepend="and" property="DepartmentName">DepartmentName=#DepartmentName#</isNotEmpty>
          <isNotEmpty prepend="and" property="BalanceTime">BalanceTime=#BalanceTime#</isNotEmpty>
        </isParameterPresent>
      </dynamic>
    </select>
    <select id="SelectDepartmentBalance"  resultMap="DepartmentBalanceMap"  parameterClass="DepartmentBalance">
      select * from (
      select row_number() over(order by  $OrderbyColomnName$  desc,$SubOrderbyColomnName$ desc) as RowNumber,*  from DepartmentBalanceVary where 1=1
      <dynamic>
        <isParameterPresent>
          <isNotEmpty prepend="and" property="ID">ID=#ID#</isNotEmpty>
          <isNotEmpty prepend="and" property="DepartmentID">DepartmentID=#DepartmentID#</isNotEmpty>
          <isNotEmpty prepend="and" property="DepartmentName">DepartmentName=#DepartmentName#</isNotEmpty>
          <isNotEmpty prepend="and" property="BalanceTime">BalanceTime=#BalanceTime#</isNotEmpty>
        </isParameterPresent>
      </dynamic>
      )as result
      where 1=1
      <dynamic>
        <isParameterPresent>
          <isNotEmpty prepend="and" property="StartIndex"><![CDATA[result.RowNumber>=#StartIndex#]]></isNotEmpty>
          <isNotEmpty prepend="and" property="EndIndex"><![CDATA[result.RowNumber<=#EndIndex#]]></isNotEmpty>
        </isParameterPresent>
      </dynamic>
    </select>
    <insert id="BatchInsertDepartmentBalance" parameterClass="ArrayList">
      insert DepartmentBalanceVary(ID,DepartmentID,DepartmentName,RegularMoney,UnRegularMoney,AmountMoney,RegularMoneyVary,UnRegularMoneyVary,AmountMoneyVary,Rate ,BalanceTime)
      values
      <iterate conjunction=",">
        ( #[].ID#,
        #[].DepartmentID#,
        #[].DepartmentName#,
        #[].RegularMoney#,
        #[].UnRegularMoney#,
        #[].AmountMoney#,
        #[].RegularMoneyVary#,
        #[].UnRegularMoneyVary#,
        #[].AmountMoneyVary#,
        #[].Rate#,
        #[].BalanceTime#
        )
      </iterate>
    </insert>

    <delete id="BatchDeleteDepartmentBalance" parameterClass="ArrayList">
      DELETE FROM DepartmentBalanceVary WHERE
      BalanceTime IN
      (
      <iterate conjunction=",">
        #[]#
      </iterate> 
      )
    </delete>
  </statements>
</sqlMap>