<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:tool="clr-namespace:BalanceReport.Tools"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    >
    
    <!--TextBlock触发器-->
    <Style TargetType="TextBlock" x:Key="textBlock">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Red" />
                <Setter Property="TextDecorations" Value="UnderLine"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBlock" x:Key="textBlockStyle">
        <Setter Property="FontFamily" Value="宋体"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
    </Style>
    <!--弹框 textBlock 内容wtt-->
    <Style TargetType="TextBlock" x:Key="textBlockContentStyle">
        <Setter Property="FontFamily" Value="宋体"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property='Margin' Value="10,0,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>



    <Style TargetType="TextBlock" x:Key="textBlockStyle2">
        <Setter Property="FontFamily" Value="宋体"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="textBlockTitleStyle">
        <Setter Property="FontFamily" Value="宋体"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style TargetType="TextBox" x:Key="textBoxStyle">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="27"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
    </Style>

    <Style TargetType="TextBox" x:Key="textBoxStyle2">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="300"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="Height" Value="27"/>
    </Style>

    <Style TargetType="DatePicker" x:Key="datePickerStyle">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="27"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
    </Style>

    <Style TargetType="ComboBox" x:Key="comboBoxStyle">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="27"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
    </Style>

    <Style TargetType="ComboBox" x:Key="comboBoxStyle2">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="300"/>
        <Setter Property="Height" Value="27"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
    </Style>

    <Style TargetType="PasswordBox" x:Key="passwordBoxStyle">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="27"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
    </Style>

    <!--ToolBar的背景色-->
    <Style TargetType="ToolBar">
        <Setter Property="Background" Value="#FFD5DCE8" />
    </Style>

    <!--去掉GridView的Header-->
    <Style x:Key="myHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Visibility" Value="Collapsed"/>
    </Style>

    <!--ListViewItem触发器-->
    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="FontSize" Value="15"/>
        <Style.Triggers>
            <!--隔行颜色设定-->
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="#FF60BDD8"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter  Property="Background" Value="YellowGreen" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <!--<Setter  Property="Background" Value="DarkGreen" />-->
                <Setter  Property="Background" Value="#2BA726" />
                <Setter Property="Focusable" Value="True"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--GridView的Header的样式 模板的名称HeaderContainerStyle-->
    <Style x:Key="GridViewHeaderStyle" TargetType="GridViewColumnHeader">
        <Style.Setters>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <GradientStop Color="AliceBlue" Offset="0"/>
                        <GradientStop Color="LightBlue" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter  Property="Background" >
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Color="White" Offset="0"/>
                            <GradientStop Color="Orange" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--TabControl的TabItems的样式-->
    <Style x:Key="TabItemStyleB" TargetType="{x:Type TabItem}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="#FF85C3FF" Offset="0"/>
                    <GradientStop Color="#FF85C3FF" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <!-- 主Border -->
                        <Border Name="bd"
                                   Background="{TemplateBinding Background}"
                                   BorderBrush="Gray" 
                                   BorderThickness="1"
                                   CornerRadius="5,5,0,0" Width="120" >
                            <ContentPresenter ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="6,3"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Focusable" Value="True"/>
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="White" Offset="0" />
                                        <GradientStop Color="#FF9DD9F1" Offset="1" />
                                        <GradientStop Color="#FF43B4FB" Offset="0.754" />
                                        <GradientStop Color="#FF6DBAE1" Offset="0.254" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Focusable" Value="False"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="White" Offset="0" />
                                        <GradientStop Color="#FF9DD9F1" Offset="1" />
                                        <GradientStop Color="#FF43B4FB" Offset="0.754" />
                                        <GradientStop Color="#FF6DBAE1" Offset="0.254" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--2014年4月21日修改-->
    <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="AliceBlue" Offset="0"/>
                    <GradientStop Color="LightBlue" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <!-- 主Border -->
                        <Border Name="bd"
                                   Background="{TemplateBinding Background}"
                                   BorderBrush="Gray" 
                                   BorderThickness="1"
                                   CornerRadius="5,5,0,0"  >
                            <ContentPresenter ContentSource="Header" HorizontalAlignment="Center" Margin="10,3"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Focusable" Value="True"/>
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="White" Offset="0" />
                                        <GradientStop Color="#FF9DD9F1" Offset="1" />
                                        <GradientStop Color="#FF43B4FB" Offset="0.754" />
                                        <GradientStop Color="#FF6DBAE1" Offset="0.254" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Focusable" Value="False"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="White" Offset="0" />
                                        <GradientStop Color="#FF9DD9F1" Offset="1" />
                                        <GradientStop Color="#FF43B4FB" Offset="0.754" />
                                        <GradientStop Color="#FF6DBAE1" Offset="0.254" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--圆角textbox-->
    <Style x:Key="corTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Rectangle RadiusX="5" RadiusY="5" Fill="{TemplateBinding Background}" Stroke="Black"/>
                        <ScrollViewer x:Name="PART_ContentHost"
                          HorizontalScrollBarVisibility="Hidden"
                          VerticalScrollBarVisibility="Hidden"
                          Padding="{TemplateBinding Padding}"
                          Focusable="false">
                        </ScrollViewer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    
    <DataTemplate x:Key="chkControls">
        <CheckBox x:Name="btnCheckCtrl" Foreground="Blue" HorizontalAlignment="Center" IsChecked="{Binding Auth,Converter={StaticResource itbc}}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateCheck,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Mode=OneWay}" 
							CommandParameter="{Binding}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </CheckBox>
    </DataTemplate>

    <!--ListView删除列的样式-->
    <DataTemplate x:Key="CellDelete">
        <TextBlock x:Name="t" Text="删除" TextDecorations="UnderLine" Foreground="Blue">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{Binding Path=DataContext.DeleteCommand,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Mode=OneWay}" 
                                CommandParameter="{Binding}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TextBlock>
        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="t" Property="Foreground" Value="Red" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!--ListView下载列的样式-->
    <DataTemplate x:Key="CellDown">
        <TextBlock x:Name="t" Text="下载" TextDecorations="UnderLine" Foreground="Blue">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{Binding Path=DataContext.DownCommand,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Mode=OneWay}" 
                                CommandParameter="{Binding}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TextBlock>
        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="t" Property="Foreground" Value="Red" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!--ListView图片列的样式-->
    <DataTemplate x:Key="CellImage">
        <Image Source="{Binding Path,Converter={StaticResource ImageC}}" Width="20" Height="20"/>
    </DataTemplate>


    <!--20140516-->
    <!--二级树的样式-->
    <Style TargetType="StackPanel" x:Key="ProType">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="LightBlue" Offset="0"/>
                            <GradientStop Color="#FFB0DAFF" Offset="0.577"/>
                            <GradientStop Color="#FFCDFFFF" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF2C7AD6" Offset="1" />
                    <GradientStop Color="#FF3FCDE0" Offset="0" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="170"/>
        <Setter Property="Height" Value="25"/>
    </Style>
    <Style TargetType="StackPanel" x:Key="Pro">
        <Style.Triggers >
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="LightBlue" Offset="0"/>
                            <GradientStop Color="#FFB0DAFF" Offset="0.577"/>
                            <GradientStop Color="#FFCDFFFF" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <!--<GradientStop Color="#FF2C7AD6" Offset="1" />
                    <GradientStop Color="#FF3FCDE0" Offset="0" />-->
                    <GradientStop Color="#FF0476EF" Offset="1" />
                    <GradientStop Color="#FF74CDE0" Offset="0" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="130"/>
        <Setter Property="Height" Value="23"/>
    </Style>

    <!--二级树子目录显示-->
    <HierarchicalDataTemplate x:Key="ProductTemplate" ItemsSource="{Binding ProductList}">
        <Border BorderThickness="0.5" CornerRadius="8" BorderBrush="LightGoldenrodYellow">
            <StackPanel Style="{Binding TVType, Converter={StaticResource TemplateConverter}}" Margin="1" VerticalAlignment="Center">
                <TextBlock Text="{Binding TVName}" FontSize="12" Foreground="White"></TextBlock>
            </StackPanel>
        </Border>
        
    </HierarchicalDataTemplate>
    
    <!--TreeView前面小三角的颜色-->
    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
                        <Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Stroke="DarkBlue">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                            </Path.RenderTransform>
                            <Path.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Black" Offset="0" />
                                    <GradientStop Color="#FFA1D9F1" Offset="1" />
                                    <GradientStop Color="#FF67B4FB" Offset="0.754" />
                                    <GradientStop Color="LightCyan" Offset="0.254" />
                                </LinearGradientBrush>
                            </Path.Fill>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="RenderTransform" TargetName="ExpandPath">
                                <Setter.Value>
                                    <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                </Setter.Value>
                            </Setter>
                            <!--<Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>-->
                            <Setter Property="Fill" TargetName="ExpandPath">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Black" Offset="0" />
                                        <GradientStop Color="#FFA1D9F1" Offset="1" />
                                        <GradientStop Color="#FF67B4FB" Offset="0.754" />
                                        <GradientStop Color="LightCyan" Offset="0.254" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="1,0,0,0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <!-- 这句代码的最后一个属性Visibility="Collapsed"控制是否显示小三角，这里的小三角的样式是自己写的，你也可以改成别的样式的-->
                        <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}" Visibility="Visible"/>
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>